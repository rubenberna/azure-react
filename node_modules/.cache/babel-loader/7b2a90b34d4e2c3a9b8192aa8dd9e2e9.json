{"ast":null,"code":"import createDataContext from './createDataContext';\nimport { getAccessToken } from '../utils/security.util';\nconst TYPES = {\n  ADD_ERROR: 'auth/add_error',\n  LOGIN: 'auth/login',\n  SIGN_OUT: 'auth/signOut',\n  CLEAR_ERROR: 'auth/clearError'\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case TYPES.ADD_ERROR:\n      return { ...state,\n        errorMessage: action.payload\n      };\n\n    case TYPES.LOGIN:\n      return {\n        isAuthenticated: true,\n        errorMessage: '',\n        token: action.payload\n      };\n\n    case TYPES.CLEAR_ERROR:\n      return { ...state,\n        errorMessage: ''\n      };\n\n    case TYPES.SIGN_OUT:\n      return {\n        isAuthenticated: false,\n        token: null,\n        errorMessage: \"\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst signIn = dispatch => async () => {\n  try {\n    const firstTimeRefresh = await getAccessToken();\n    dispatch({\n      type: TYPES.LOGIN,\n      payload: firstTimeRefresh\n    });\n  } catch (err) {\n    dispatch({\n      type: TYPES.ADD_ERROR,\n      payload: err\n    });\n  }\n};\n\nexport const {\n  Provider,\n  Context\n} = createDataContext(authReducer, {\n  signIn\n}, {\n  isAuthenticated: false,\n  token: null,\n  errorMessage: ''\n});","map":{"version":3,"sources":["/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/context/AuthContext.js"],"names":["createDataContext","getAccessToken","TYPES","ADD_ERROR","LOGIN","SIGN_OUT","CLEAR_ERROR","authReducer","state","action","type","errorMessage","payload","isAuthenticated","token","signIn","dispatch","firstTimeRefresh","err","Provider","Context"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,SAAS,EAAE,gBADC;AAEZC,EAAAA,KAAK,EAAE,YAFK;AAGZC,EAAAA,QAAQ,EAAE,cAHE;AAIZC,EAAAA,WAAW,EAAE;AAJD,CAAd;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACC,SAAX;AACE,aAAO,EAAC,GAAGK,KAAJ;AAAWG,QAAAA,YAAY,EAAEF,MAAM,CAACG;AAAhC,OAAP;;AACF,SAAKV,KAAK,CAACE,KAAX;AACE,aAAO;AAACS,QAAAA,eAAe,EAAE,IAAlB;AAAwBF,QAAAA,YAAY,EAAE,EAAtC;AAA0CG,QAAAA,KAAK,EAAEL,MAAM,CAACG;AAAxD,OAAP;;AACF,SAAKV,KAAK,CAACI,WAAX;AACE,aAAO,EAAC,GAAGE,KAAJ;AAAWG,QAAAA,YAAY,EAAE;AAAzB,OAAP;;AACF,SAAKT,KAAK,CAACG,QAAX;AACE,aAAO;AAACQ,QAAAA,eAAe,EAAE,KAAlB;AAAyBC,QAAAA,KAAK,EAAE,IAAhC;AAAsCH,QAAAA,YAAY,EAAE;AAApD,OAAP;;AACF;AACE,aAAOH,KAAP;AAVJ;AAYD,CAbD;;AAeA,MAAMO,MAAM,GAAIC,QAAD,IAAc,YAAY;AACvC,MAAI;AACF,UAAMC,gBAAgB,GAAG,MAAMhB,cAAc,EAA7C;AACAe,IAAAA,QAAQ,CAAC;AACPN,MAAAA,IAAI,EAAER,KAAK,CAACE,KADL;AAEPQ,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZF,IAAAA,QAAQ,CAAC;AACPN,MAAAA,IAAI,EAAER,KAAK,CAACC,SADL;AAEPS,MAAAA,OAAO,EAAEM;AAFF,KAAD,CAAR;AAID;AACF,CAbD;;AAeA,OAAO,MAAM;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,IAAsBpB,iBAAiB,CAClDO,WADkD,EAElD;AAACQ,EAAAA;AAAD,CAFkD,EAGlD;AAACF,EAAAA,eAAe,EAAE,KAAlB;AAAyBC,EAAAA,KAAK,EAAE,IAAhC;AAAsCH,EAAAA,YAAY,EAAE;AAApD,CAHkD,CAA7C","sourcesContent":["import createDataContext from './createDataContext';\nimport { getAccessToken } from '../utils/security.util';\n\nconst TYPES = {\n  ADD_ERROR: 'auth/add_error',\n  LOGIN: 'auth/login',\n  SIGN_OUT: 'auth/signOut',\n  CLEAR_ERROR: 'auth/clearError',\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case TYPES.ADD_ERROR:\n      return {...state, errorMessage: action.payload};\n    case TYPES.LOGIN:\n      return {isAuthenticated: true, errorMessage: '', token: action.payload};\n    case TYPES.CLEAR_ERROR:\n      return {...state, errorMessage: ''};\n    case TYPES.SIGN_OUT:\n      return {isAuthenticated: false, token: null, errorMessage: \"\"};\n    default:\n      return state;\n  }\n};\n\nconst signIn = (dispatch) => async () => {\n  try {\n    const firstTimeRefresh = await getAccessToken();\n    dispatch({\n      type: TYPES.LOGIN,\n      payload: firstTimeRefresh\n    })\n  } catch (err) {\n    dispatch({\n      type: TYPES.ADD_ERROR,\n      payload: err\n    })\n  }\n};\n\nexport const {Provider, Context} = createDataContext(\n  authReducer,\n  {signIn},\n  {isAuthenticated: false, token: null, errorMessage: ''}\n);\n"]},"metadata":{},"sourceType":"module"}