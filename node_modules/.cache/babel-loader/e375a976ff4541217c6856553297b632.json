{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/utils/useGetDashboards.js\";\nimport { lazy } from 'react';\nimport { metadata as appOneMetadata } from '@data-portal/app-one';\nimport { metadata as appTwoMetadata } from '@data-portal/app-two';\nimport { convertToKebabCase } from './_general.util';\nconst GitHubFinder = /*#__PURE__*/lazy(_c = () => import('@data-portal/app-one'));\n_c2 = GitHubFinder;\nconst Counter = /*#__PURE__*/lazy(_c3 = () => import('@data-portal/app-two'));\n_c4 = Counter;\n\nconst DASHBOARDS = name => ({\n  APP_1: /*#__PURE__*/_jsxDEV(GitHubFinder, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this),\n  APP_2: /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this)\n})[name];\n\n_c5 = DASHBOARDS;\nexport const useGetDashboards = () => {\n  const listOfLibraries = [appOneMetadata, appTwoMetadata]; // const dashBoardsList = listOfLibraries.map((dashboard) => ({\n  //   title: dashboard.title,\n  //   description: dashboard.description,\n  //   icon: dashboard.icon,\n  //   slug: `/${convertToKebabCase(dashboard.title)}`,\n  //   requiredPermissions: dashboard.requiredPermissions,\n  //   component: lazy(() => import('@data-portal/app-one'))\n  // }));\n\n  const dashBoardsList = listOfLibraries.map((dashboard, index) => ({\n    title: dashboard.title,\n    description: dashboard.description,\n    icon: dashboard.icon,\n    slug: `/${convertToKebabCase(dashboard.title)}`,\n    requiredPermissions: dashboard.requiredPermissions,\n    component: DASHBOARDS[`APP_${index + 1}`]\n  })); // const dashBoardsList = [\n  //   {\n  //     title: appOneMetadata.title,\n  //     description: appOneMetadata.description,\n  //     slug: `/${convertToKebabCase(appOneMetadata.title)}`,\n  //     requiredPermissions: appOneMetadata.requiredPermissions,\n  //     icon: appOneMetadata.icon,\n  //     component: <APP_1 title=\"GitHub finder\" state={state}/>\n  //   }, {\n  //     title: appTwoMetadata.title,\n  //     description: appTwoMetadata.description,\n  //     slug: `/${convertToKebabCase(appTwoMetadata.title)}`,\n  //     requiredPermissions: appTwoMetadata.requiredPermissions,\n  //     icon: appTwoMetadata.icon,\n  //     component: <APP_2 state={state}/>\n  //   },\n  // ];\n\n  return {\n    dashBoardsList\n  };\n};\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"GitHubFinder$lazy\");\n$RefreshReg$(_c2, \"GitHubFinder\");\n$RefreshReg$(_c3, \"Counter$lazy\");\n$RefreshReg$(_c4, \"Counter\");\n$RefreshReg$(_c5, \"DASHBOARDS\");","map":{"version":3,"sources":["/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/utils/useGetDashboards.js"],"names":["lazy","metadata","appOneMetadata","appTwoMetadata","convertToKebabCase","GitHubFinder","Counter","DASHBOARDS","name","APP_1","APP_2","useGetDashboards","listOfLibraries","dashBoardsList","map","dashboard","index","title","description","icon","slug","requiredPermissions","component"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,OAArB;AACA,SAASC,QAAQ,IAAIC,cAArB,QAA2C,sBAA3C;AACA,SAASD,QAAQ,IAAIE,cAArB,QAA2C,sBAA3C;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AAEA,MAAMC,YAAY,gBAAGL,IAAI,MAAC,MAAM,OAAO,sBAAP,CAAP,CAAzB;MAAMK,Y;AACN,MAAMC,OAAO,gBAAGN,IAAI,OAAC,MAAM,OAAO,sBAAP,CAAP,CAApB;MAAMM,O;;AAGN,MAAMC,UAAU,GAAIC,IAAD,IAAU,CAAC;AAC5BC,EAAAA,KAAK,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UADqB;AAE5BC,EAAAA,KAAK,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAFqB,CAAD,EAG1BF,IAH0B,CAA7B;;MAAMD,U;AAKN,OAAO,MAAMI,gBAAgB,GAAG,MAAM;AACpC,QAAMC,eAAe,GAAG,CAACV,cAAD,EAAiBC,cAAjB,CAAxB,CADoC,CAGpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMU,cAAc,GAAGD,eAAe,CAACE,GAAhB,CAAoB,CAACC,SAAD,EAAYC,KAAZ,MAAuB;AAChEC,IAAAA,KAAK,EAAEF,SAAS,CAACE,KAD+C;AAEhEC,IAAAA,WAAW,EAAEH,SAAS,CAACG,WAFyC;AAGhEC,IAAAA,IAAI,EAAEJ,SAAS,CAACI,IAHgD;AAIhEC,IAAAA,IAAI,EAAG,IAAGhB,kBAAkB,CAACW,SAAS,CAACE,KAAX,CAAkB,EAJkB;AAKhEI,IAAAA,mBAAmB,EAAEN,SAAS,CAACM,mBALiC;AAMhEC,IAAAA,SAAS,EAAEf,UAAU,CAAE,OAAMS,KAAK,GAAG,CAAG,EAAnB;AAN2C,GAAvB,CAApB,CAAvB,CAZoC,CAsBpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAO;AAACH,IAAAA;AAAD,GAAP;AACD,CAzCM","sourcesContent":["import { lazy } from 'react';\nimport { metadata as appOneMetadata } from '@data-portal/app-one';\nimport { metadata as appTwoMetadata } from '@data-portal/app-two';\nimport { convertToKebabCase } from './_general.util';\n\nconst GitHubFinder = lazy(() => import('@data-portal/app-one'));\nconst Counter = lazy(() => import('@data-portal/app-two'));\n\n\nconst DASHBOARDS = (name) => ({\n  APP_1: <GitHubFinder/>,\n  APP_2: <Counter/>\n})[name]\n\nexport const useGetDashboards = () => {\n  const listOfLibraries = [appOneMetadata, appTwoMetadata];\n\n  // const dashBoardsList = listOfLibraries.map((dashboard) => ({\n  //   title: dashboard.title,\n  //   description: dashboard.description,\n  //   icon: dashboard.icon,\n  //   slug: `/${convertToKebabCase(dashboard.title)}`,\n  //   requiredPermissions: dashboard.requiredPermissions,\n  //   component: lazy(() => import('@data-portal/app-one'))\n  // }));\n\n  const dashBoardsList = listOfLibraries.map((dashboard, index) => ({\n    title: dashboard.title,\n    description: dashboard.description,\n    icon: dashboard.icon,\n    slug: `/${convertToKebabCase(dashboard.title)}`,\n    requiredPermissions: dashboard.requiredPermissions,\n    component: DASHBOARDS[`APP_${index + 1 }`]\n  }));\n\n\n  // const dashBoardsList = [\n  //   {\n  //     title: appOneMetadata.title,\n  //     description: appOneMetadata.description,\n  //     slug: `/${convertToKebabCase(appOneMetadata.title)}`,\n  //     requiredPermissions: appOneMetadata.requiredPermissions,\n  //     icon: appOneMetadata.icon,\n  //     component: <APP_1 title=\"GitHub finder\" state={state}/>\n  //   }, {\n  //     title: appTwoMetadata.title,\n  //     description: appTwoMetadata.description,\n  //     slug: `/${convertToKebabCase(appTwoMetadata.title)}`,\n  //     requiredPermissions: appTwoMetadata.requiredPermissions,\n  //     icon: appTwoMetadata.icon,\n  //     component: <APP_2 state={state}/>\n  //   },\n  // ];\n\n  return {dashBoardsList};\n};\n"]},"metadata":{},"sourceType":"module"}