{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/components/sideNavbar/SideNavbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Divider, Menu } from 'semantic-ui-react';\nimport { useGetDashboards } from '../../utils/useGetDashboards';\nimport { Context as NotificationsContext } from '../../context/NotificationsContext';\nimport { userHasPermission } from '../../utils/useUserHasPermission.util';\nimport VolvoIcon from '../../assets/icons/assets-logo-icon.png';\nimport { Context as AuthContext } from '../../context/AuthContext';\nconst defaultHome = {\n  title: 'Volvo',\n  slug: '/',\n  icon: VolvoIcon\n};\nexport const SideNavbar = () => {\n  _s();\n\n  const {\n    state: {\n      role\n    }\n  } = useContext(AuthContext);\n  const history = useHistory();\n  const {\n    dashBoardsList\n  } = useGetDashboards();\n  const [visibleSegment, setVisibleSegment] = useState(defaultHome.slug);\n  const {\n    setNotification\n  } = useContext(NotificationsContext);\n\n  const navigate = (requiredPermission, link) => {\n    setVisibleSegment(link); // console.log(requiredPermission);\n    // if (requiredPermission) {\n    //   userHasPermission(requiredPermission[0], role) && history.push(link);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"side-navbar\",\n    children: [defaultHome, ...dashBoardsList].map(dashboard => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        className: \"side-navbar-item\",\n        as: \"a\",\n        active: visibleSegment === dashboard.slug,\n        onClick: () => navigate(dashboard.requiredPermissions, dashboard.slug),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"side-navbar-item-logo\",\n          src: dashboard.icon,\n          alt: dashboard.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"side-navbar-item-title\",\n          children: dashboard.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, dashboard.slug, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}; // <Grid columns={1}>\n//   <Grid.Column>\n//     <Sidebar.Pushable as={Segment} style={{minHeight: '100vh'}}>\n//       <Sidebar\n//         as={Menu}\n//         animation='overlay'\n//         direction='left'\n//         icon='labeled'\n//         inverted\n//         vertical\n//         visible={true}\n//         width='thin'\n//       >\n//         <Menu.Item className=\"side-navbar-item\" as='a'\n//                    onClick={() => setVisibleSegment(Segments.HOME)}\n//                    active={visibleSegment === Segments.HOME}>\n//           <img className=\"side-navbar-item-logo\" src={BLUE_LOGO} alt=\"volvo\"/>\n//           <span className=\"side-navbar-item-title\">Volvo</span>\n//         </Menu.Item>\n//         <Menu.Item as='a' onClick={() => setVisibleSegment(Segments.APP_ONE)}\n//                    active={visibleSegment === Segments.APP_ONE}>\n//           <Icon name='font'/>\n//           Npm package\n//         </Menu.Item>\n//         <Menu.Item as='a' onClick={() => setVisibleSegment(Segments.APP_TWO)}\n//                    active={visibleSegment === Segments.APP_TWO}>\n//           <Icon name='bold'/>\n//           Npm package\n//         </Menu.Item>\n//       </Sidebar>\n//       <Sidebar.Pusher>\n//         <Suspense fallback={<div>Loading...</div>}>\n//           <div className=\"h-main-segment\">\n//             {renderSegments(visibleSegment)}\n//           </div>\n//         </Suspense>\n//       </Sidebar.Pusher>\n//     </Sidebar.Pushable>\n//   </Grid.Column>\n// </Grid>\n\n_s(SideNavbar, \"G/J0fm2sTTi67hKHYsYHALNz2/I=\", false, function () {\n  return [useHistory, useGetDashboards];\n});\n\n_c = SideNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideNavbar\");","map":{"version":3,"sources":["/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/components/sideNavbar/SideNavbar.js"],"names":["React","useContext","useState","useHistory","Divider","Menu","useGetDashboards","Context","NotificationsContext","userHasPermission","VolvoIcon","AuthContext","defaultHome","title","slug","icon","SideNavbar","state","role","history","dashBoardsList","visibleSegment","setVisibleSegment","setNotification","navigate","requiredPermission","link","map","dashboard","requiredPermissions"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,mBAA9B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,OAAO,IAAIC,oBAApB,QAAgD,oCAAhD;AACA,SAASC,iBAAT,QAAkC,uCAAlC;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,SAASH,OAAO,IAAII,WAApB,QAAuC,2BAAvC;AAGA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,OADW;AAElBC,EAAAA,IAAI,EAAE,GAFY;AAGlBC,EAAAA,IAAI,EAAEL;AAHY,CAApB;AAMA,OAAO,MAAMM,UAAU,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAACC,IAAAA,KAAK,EAAE;AAACC,MAAAA;AAAD;AAAR,MAAkBjB,UAAU,CAACU,WAAD,CAAlC;AACA,QAAMQ,OAAO,GAAGhB,UAAU,EAA1B;AACA,QAAM;AAACiB,IAAAA;AAAD,MAAmBd,gBAAgB,EAAzC;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsCpB,QAAQ,CAACU,WAAW,CAACE,IAAb,CAApD;AACA,QAAM;AAACS,IAAAA;AAAD,MAAoBtB,UAAU,CAACO,oBAAD,CAApC;;AAEA,QAAMgB,QAAQ,GAAG,CAACC,kBAAD,EAAqBC,IAArB,KAA8B;AAC7CJ,IAAAA,iBAAiB,CAACI,IAAD,CAAjB,CAD6C,CAE7C;AACA;AACA;AACA;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACG,CAACd,WAAD,EAAc,GAAGQ,cAAjB,EAAiCO,GAAjC,CAAqCC,SAAS,iBAC7C;AAAA,8BACE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,EAAE,EAAC,GAFL;AAIE,QAAA,MAAM,EAAEP,cAAc,KAAKO,SAAS,CAACd,IAJvC;AAKE,QAAA,OAAO,EAAE,MAAMU,QAAQ,CAACI,SAAS,CAACC,mBAAX,EAAgCD,SAAS,CAACd,IAA1C,CALzB;AAAA,gCAME;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAuC,UAAA,GAAG,EAAEc,SAAS,CAACb,IAAtD;AAA4D,UAAA,GAAG,EAAEa,SAAS,CAACf;AAA3E;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAM,UAAA,SAAS,EAAC,wBAAhB;AAAA,oBAA0Ce,SAAS,CAACf;AAApD;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA,SAGOe,SAAS,CAACd,IAHjB;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAjCM,C,CAoCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA3EaE,U;UAEKb,U,EACSG,gB;;;KAHdU,U","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Divider, Menu } from 'semantic-ui-react';\nimport { useGetDashboards } from '../../utils/useGetDashboards';\nimport { Context as NotificationsContext } from '../../context/NotificationsContext';\nimport { userHasPermission } from '../../utils/useUserHasPermission.util';\nimport VolvoIcon from '../../assets/icons/assets-logo-icon.png';\nimport { Context as AuthContext } from '../../context/AuthContext';\n\n\nconst defaultHome = {\n  title: 'Volvo',\n  slug: '/',\n  icon: VolvoIcon\n};\n\nexport const SideNavbar = () => {\n  const {state: {role}} = useContext(AuthContext);\n  const history = useHistory();\n  const {dashBoardsList} = useGetDashboards();\n  const [visibleSegment, setVisibleSegment] = useState(defaultHome.slug);\n  const {setNotification} = useContext(NotificationsContext);\n\n  const navigate = (requiredPermission, link) => {\n    setVisibleSegment(link)\n    // console.log(requiredPermission);\n    // if (requiredPermission) {\n    //   userHasPermission(requiredPermission[0], role) && history.push(link);\n    // }\n  };\n\n  return (\n    <div className=\"side-navbar\">\n      {[defaultHome, ...dashBoardsList].map(dashboard => (\n        <>\n          <Menu.Item\n            className=\"side-navbar-item\"\n            as='a'\n            key={dashboard.slug}\n            active={visibleSegment === dashboard.slug }\n            onClick={() => navigate(dashboard.requiredPermissions, dashboard.slug)}>\n            <img className=\"side-navbar-item-logo\" src={dashboard.icon} alt={dashboard.title}/>\n            <span className=\"side-navbar-item-title\">{dashboard.title}</span>\n          </Menu.Item>\n          <Divider/>\n        </>\n      ))}\n    </div>\n  );\n};\n\n\n// <Grid columns={1}>\n//   <Grid.Column>\n//     <Sidebar.Pushable as={Segment} style={{minHeight: '100vh'}}>\n//       <Sidebar\n//         as={Menu}\n//         animation='overlay'\n//         direction='left'\n//         icon='labeled'\n//         inverted\n//         vertical\n//         visible={true}\n//         width='thin'\n//       >\n//         <Menu.Item className=\"side-navbar-item\" as='a'\n//                    onClick={() => setVisibleSegment(Segments.HOME)}\n//                    active={visibleSegment === Segments.HOME}>\n//           <img className=\"side-navbar-item-logo\" src={BLUE_LOGO} alt=\"volvo\"/>\n//           <span className=\"side-navbar-item-title\">Volvo</span>\n//         </Menu.Item>\n//         <Menu.Item as='a' onClick={() => setVisibleSegment(Segments.APP_ONE)}\n//                    active={visibleSegment === Segments.APP_ONE}>\n//           <Icon name='font'/>\n//           Npm package\n//         </Menu.Item>\n//         <Menu.Item as='a' onClick={() => setVisibleSegment(Segments.APP_TWO)}\n//                    active={visibleSegment === Segments.APP_TWO}>\n//           <Icon name='bold'/>\n//           Npm package\n//         </Menu.Item>\n//       </Sidebar>\n//       <Sidebar.Pusher>\n//         <Suspense fallback={<div>Loading...</div>}>\n//           <div className=\"h-main-segment\">\n//             {renderSegments(visibleSegment)}\n//           </div>\n//         </Suspense>\n//       </Sidebar.Pusher>\n//     </Sidebar.Pushable>\n//   </Grid.Column>\n// </Grid>"]},"metadata":{},"sourceType":"module"}