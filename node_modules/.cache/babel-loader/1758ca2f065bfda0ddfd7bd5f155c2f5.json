{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/components/dashboard/DashboardCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { isBase64encoded } from '../../utils/general/_general.util';\nimport { useProtectedNavigation } from '../../utils/permissions/useUserHasPermission.util';\nimport { Context as AuthContext } from '../../context/auth/AuthContext';\nexport const DashboardCard = ({\n  dasboard\n}) => {\n  _s();\n\n  const {\n    state: {\n      role\n    }\n  } = useContext(AuthContext);\n  const {\n    navigateSafely\n  } = useProtectedNavigation();\n\n  const cardHeader = dasboardContent => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: dasboardContent.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: dasboardContent.title,\n      src: isBase64encoded(dasboardContent.icon) ? `data:image/jpeg;base64,${dasboardContent.icon}` : dasboardContent.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    link: true,\n    header: cardHeader(dasboard),\n    meta: dasboard.requiredPermissions.join(', '),\n    description: dasboard.description,\n    onClick: () => navigateSafely(dasboard.requiredPermissions, role, dasboard.slug)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashboardCard, \"Tn3sRx3y0nIUQt9Rw6sl33ePQwk=\", false, function () {\n  return [useProtectedNavigation];\n});\n\n_c = DashboardCard;\nDashboardCard.propTypes = {\n  dasboard: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    requiredPermissions: PropTypes.array,\n    icon: PropTypes.string,\n    slug: PropTypes.string\n  })\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardCard\");","map":{"version":3,"sources":["/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/components/dashboard/DashboardCard.js"],"names":["React","useContext","Card","PropTypes","isBase64encoded","useProtectedNavigation","Context","AuthContext","DashboardCard","dasboard","state","role","navigateSafely","cardHeader","dasboardContent","title","icon","requiredPermissions","join","description","slug","propTypes","shape","string","array"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAA+B,mCAA/B;AACA,SAASC,sBAAT,QAAuC,mDAAvC;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,gCAAvC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAC3C,QAAM;AAACC,IAAAA,KAAK,EAAE;AAACC,MAAAA;AAAD;AAAR,MAAkBV,UAAU,CAACM,WAAD,CAAlC;AACA,QAAM;AAACK,IAAAA;AAAD,MAAmBP,sBAAsB,EAA/C;;AAEA,QAAMQ,UAAU,GAAIC,eAAD,iBACjB;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA,gBAAOA,eAAe,CAACC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,GAAG,EAAED,eAAe,CAACC,KADvB;AAEE,MAAA,GAAG,EAAEX,eAAe,CAACU,eAAe,CAACE,IAAjB,CAAf,GAAyC,0BAAyBF,eAAe,CAACE,IAAK,EAAvF,GAA2FF,eAAe,CAACE;AAFlH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AASA,sBACE,QAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,MAAM,EAAEH,UAAU,CAACJ,QAAD,CAFpB;AAGE,IAAA,IAAI,EAAEA,QAAQ,CAACQ,mBAAT,CAA6BC,IAA7B,CAAkC,IAAlC,CAHR;AAIE,IAAA,WAAW,EAAET,QAAQ,CAACU,WAJxB;AAKE,IAAA,OAAO,EAAE,MAAMP,cAAc,CAACH,QAAQ,CAACQ,mBAAV,EAA+BN,IAA/B,EAAqCF,QAAQ,CAACW,IAA9C;AAL/B;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAtBM;;GAAMZ,a;UAEcH,sB;;;KAFdG,a;AAwBbA,aAAa,CAACa,SAAd,GAA0B;AACxBZ,EAAAA,QAAQ,EAAEN,SAAS,CAACmB,KAAV,CAAgB;AACxBP,IAAAA,KAAK,EAAEZ,SAAS,CAACoB,MADO;AAExBJ,IAAAA,WAAW,EAAEhB,SAAS,CAACoB,MAFC;AAGxBN,IAAAA,mBAAmB,EAAEd,SAAS,CAACqB,KAHP;AAIxBR,IAAAA,IAAI,EAAEb,SAAS,CAACoB,MAJQ;AAKxBH,IAAAA,IAAI,EAAEjB,SAAS,CAACoB;AALQ,GAAhB;AADc,CAA1B","sourcesContent":["import React, { useContext } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { isBase64encoded} from '../../utils/general/_general.util';\nimport { useProtectedNavigation } from '../../utils/permissions/useUserHasPermission.util';\nimport { Context as AuthContext } from '../../context/auth/AuthContext';\n\nexport const DashboardCard = ({dasboard}) => {\n  const {state: {role}} = useContext(AuthContext);\n  const {navigateSafely} = useProtectedNavigation();\n\n  const cardHeader = (dasboardContent) => (\n    <div className=\"dashboard-card\">\n      <span>{dasboardContent.title}</span>\n      <img\n        alt={dasboardContent.title}\n        src={isBase64encoded(dasboardContent.icon) ? `data:image/jpeg;base64,${dasboardContent.icon}` : dasboardContent.icon }/>\n    </div>\n  )\n\n  return (\n    <Card\n      link\n      header={cardHeader(dasboard)}\n      meta={dasboard.requiredPermissions.join(', ')}\n      description={dasboard.description}\n      onClick={() => navigateSafely(dasboard.requiredPermissions, role, dasboard.slug)}\n    />\n  );\n};\n\nDashboardCard.propTypes = {\n  dasboard: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    requiredPermissions: PropTypes.array,\n    icon: PropTypes.string,\n    slug: PropTypes.string\n  })\n};\n\n"]},"metadata":{},"sourceType":"module"}