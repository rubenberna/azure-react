{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/components/sideNavbar/SideNavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, Suspense, useContext, useState } from 'react';\nimport { Dropdown, Grid, Icon, Menu, Segment, Sidebar } from 'semantic-ui-react';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Dashboards } from '../dashboards/Dashboards';\nimport BLUE_LOGO from '../../assets/icons/assets-logo-icon.png';\nconst GHubProfile = /*#__PURE__*/lazy(_c = () => import('@data-portal/app-one'));\n_c2 = GHubProfile;\nconst Counter = /*#__PURE__*/lazy(_c3 = () => import('@data-portal/app-two'));\n_c4 = Counter;\nconst Segments = {\n  HOME: 'HOME',\n  APP_ONE: 'APP_0',\n  APP_TWO: 'APP_1'\n};\nexport const SideNavbar = () => {\n  _s();\n\n  const [visibleSegment, setVisibleSegment] = useState(Segments.HOME);\n  const {\n    state: {\n      username,\n      isAuthenticated,\n      errorMessage\n    },\n    signOut,\n    signIn\n  } = useContext(AuthContext);\n\n  const renderSegments = name => ({\n    [Segments.HOME]: /*#__PURE__*/_jsxDEV(Dashboards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 22\n    }, this),\n    [Segments.APP_ONE]: /*#__PURE__*/_jsxDEV(GHubProfile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }, this),\n    [Segments.APP_TWO]: /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }, this)\n  })[name];\n\n  const renderAuth = () => {\n    if (isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          text: username,\n          direction: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            icon: \"sign-out\",\n            text: \"Sign out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columns: 1,\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      children: /*#__PURE__*/_jsxDEV(Sidebar.Pushable, {\n        as: Segment,\n        style: {\n          minHeight: '100vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          as: Menu,\n          animation: \"overlay\",\n          direction: \"left\",\n          icon: \"labeled\",\n          inverted: true,\n          vertical: true,\n          visible: true,\n          width: \"thin\",\n          children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n            as: \"a\",\n            onClick: () => setVisibleSegment(Segments.HOME),\n            active: visibleSegment === Segments.HOME,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"side-nav-bar-logo\",\n              src: BLUE_LOGO,\n              alt: \"volvo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), \"Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            as: \"a\",\n            onClick: () => setVisibleSegment(Segments.APP_ONE),\n            active: visibleSegment === Segments.APP_ONE,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"font\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), \"Npm package\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            as: \"a\",\n            onClick: () => setVisibleSegment(Segments.APP_TWO),\n            active: visibleSegment === Segments.APP_TWO,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"bold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), \"Npm package\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), renderAuth()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Sidebar.Pusher, {\n          children: /*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this),\n            children: renderSegments(visibleSegment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SideNavbar, \"cAl5z4r5KCaV+ZWIeiijXiXSkqc=\");\n\n_c5 = SideNavbar;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"GHubProfile$lazy\");\n$RefreshReg$(_c2, \"GHubProfile\");\n$RefreshReg$(_c3, \"Counter$lazy\");\n$RefreshReg$(_c4, \"Counter\");\n$RefreshReg$(_c5, \"SideNavbar\");","map":{"version":3,"sources":["/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/components/sideNavbar/SideNavBar.js"],"names":["React","lazy","Suspense","useContext","useState","Dropdown","Grid","Icon","Menu","Segment","Sidebar","Context","AuthContext","Dashboards","BLUE_LOGO","GHubProfile","Counter","Segments","HOME","APP_ONE","APP_TWO","SideNavbar","visibleSegment","setVisibleSegment","state","username","isAuthenticated","errorMessage","signOut","signIn","renderSegments","name","renderAuth","minHeight"],"mappings":"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","sourcesContent":["import React, { lazy, Suspense, useContext, useState } from 'react';\nimport { Dropdown, Grid, Icon, Menu, Segment, Sidebar } from 'semantic-ui-react';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Dashboards } from '../dashboards/Dashboards';\nimport BLUE_LOGO from '../../assets/icons/assets-logo-icon.png';\n\nconst GHubProfile = lazy(() => import('@data-portal/app-one'));\nconst Counter = lazy(() => import('@data-portal/app-two'));\n\nconst Segments = {\n  HOME: 'HOME',\n  APP_ONE: 'APP_0',\n  APP_TWO: 'APP_1',\n};\n\nexport const SideNavbar = () => {\n  const [visibleSegment, setVisibleSegment] = useState(Segments.HOME);\n  const {state: {username, isAuthenticated, errorMessage}, signOut, signIn} = useContext(AuthContext);\n\n  const renderSegments = (name) => ({\n    [Segments.HOME]: <Dashboards/>,\n    [Segments.APP_ONE]: <GHubProfile/>,\n    [Segments.APP_TWO]: <Counter/>\n  })[name];\n\n  const renderAuth = () => {\n    if (isAuthenticated) {\n      return (\n        <Menu.Item>\n          <Dropdown text={username} direction='right'>\n            <Dropdown.Item icon='sign-out' text='Sign out'/>\n          </Dropdown>\n        </Menu.Item>\n      );\n    } else {\n      return (\n        <Menu.Item>\n          Sign in\n        </Menu.Item>\n      )\n    }\n  };\n\n  return (\n    <Grid columns={1}>\n      <Grid.Column>\n        <Sidebar.Pushable as={Segment} style={{minHeight: '100vh'}}>\n          <Sidebar\n            as={Menu}\n            animation='overlay'\n            direction='left'\n            icon='labeled'\n            inverted\n            vertical\n            visible={true}\n            width='thin'\n          >\n            <Menu.Item as='a' onClick={() => setVisibleSegment(Segments.HOME)}\n                       active={visibleSegment === Segments.HOME}>\n              <img className=\"side-nav-bar-logo\" src={BLUE_LOGO} alt=\"volvo\"/>\n              Home\n            </Menu.Item>\n            <Menu.Item as='a' onClick={() => setVisibleSegment(Segments.APP_ONE)}\n                       active={visibleSegment === Segments.APP_ONE}>\n              <Icon name='font'/>\n              Npm package\n            </Menu.Item>\n            <Menu.Item as='a' onClick={() => setVisibleSegment(Segments.APP_TWO)}\n                       active={visibleSegment === Segments.APP_TWO}>\n              <Icon name='bold'/>\n              Npm package\n            </Menu.Item>\n            { renderAuth() }\n          </Sidebar>\n          <Sidebar.Pusher>\n            <Suspense fallback={<div>Loading...</div>}>\n              {renderSegments(visibleSegment)}\n            </Suspense>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </Grid.Column>\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}