{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/components/sideNavbar/SideNavbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, Suspense, useState } from 'react';\nimport { Grid, Icon, Menu, Segment, Sidebar } from 'semantic-ui-react';\nimport { Dashboard } from '../dashboard/Dashboard';\nimport BLUE_LOGO from '../../assets/icons/assets-logo-icon.png';\nimport { useGetDashboards } from '../../utils/useGetDashboards';\nconst GHubProfile = /*#__PURE__*/lazy(_c = () => import('@data-portal/app-one'));\n_c2 = GHubProfile;\nconst Counter = /*#__PURE__*/lazy(_c3 = () => import('@data-portal/app-two'));\n_c4 = Counter;\nconst Segments = {\n  HOME: 'HOME',\n  APP_ONE: 'APP_0',\n  APP_TWO: 'APP_1'\n};\nexport const SideNavbar = () => {\n  _s();\n\n  const [visibleSegment, setVisibleSegment] = useState(Segments.HOME);\n  const {\n    dashBoardsList\n  } = useGetDashboards();\n  const navEntries = dashBoardsList.reduce((acc, Comp, idx) => ({ ...acc,\n    [`APP_${idx + 1}`]: acc.component\n  }));\n\n  const renderSegments = name => ({\n    [Segments.HOME]: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }, this),\n    ...navEntries\n  })[name];\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columns: 1,\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      children: /*#__PURE__*/_jsxDEV(Sidebar.Pushable, {\n        as: Segment,\n        style: {\n          minHeight: '100vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          as: Menu,\n          animation: \"overlay\",\n          direction: \"left\",\n          icon: \"labeled\",\n          inverted: true,\n          vertical: true,\n          visible: true,\n          width: \"thin\",\n          children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n            className: \"side-navbar-item\",\n            style: {\n              display: 'flex !important'\n            },\n            as: \"a\",\n            onClick: () => setVisibleSegment(Segments.HOME),\n            active: visibleSegment === Segments.HOME,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"side-navbar-item-logo\",\n              src: BLUE_LOGO,\n              alt: \"volvo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"side-navbar-item-title\",\n              children: \"Volvo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            as: \"a\",\n            onClick: () => setVisibleSegment(Segments.APP_ONE),\n            active: visibleSegment === Segments.APP_ONE,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"font\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), \"Npm package\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            as: \"a\",\n            onClick: () => setVisibleSegment(Segments.APP_TWO),\n            active: visibleSegment === Segments.APP_TWO,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"bold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), \"Npm package\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Sidebar.Pusher, {\n          children: /*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-main-segment\",\n              children: renderSegments(visibleSegment)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}; // <div className=\"side-navbar\">\n//   { dashBoardsList.map(dashboard => (\n//     <div key={dashboard.slug}>\n//       <img src={dashboard.icon()} alt={dashboard.title}/>\n//       <span>{dashboard.title}</span>\n//     </div>\n//   ))}\n// </div>\n\n_s(SideNavbar, \"MgbKecDBAYbtzrtAVS0hCrh7zzc=\", false, function () {\n  return [useGetDashboards];\n});\n\n_c5 = SideNavbar;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"GHubProfile$lazy\");\n$RefreshReg$(_c2, \"GHubProfile\");\n$RefreshReg$(_c3, \"Counter$lazy\");\n$RefreshReg$(_c4, \"Counter\");\n$RefreshReg$(_c5, \"SideNavbar\");","map":{"version":3,"sources":["/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/components/sideNavbar/SideNavbar.js"],"names":["React","lazy","Suspense","useState","Grid","Icon","Menu","Segment","Sidebar","Dashboard","BLUE_LOGO","useGetDashboards","GHubProfile","Counter","Segments","HOME","APP_ONE","APP_TWO","SideNavbar","visibleSegment","setVisibleSegment","dashBoardsList","navEntries","reduce","acc","Comp","idx","component","renderSegments","name","minHeight","display"],"mappings":"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","sourcesContent":["import React, { lazy, Suspense, useState } from 'react';\nimport { Grid, Icon, Menu, Segment, Sidebar } from 'semantic-ui-react';\nimport { Dashboard } from '../dashboard/Dashboard';\nimport BLUE_LOGO from '../../assets/icons/assets-logo-icon.png';\nimport { useGetDashboards } from '../../utils/useGetDashboards';\n\nconst GHubProfile = lazy(() => import('@data-portal/app-one'));\nconst Counter = lazy(() => import('@data-portal/app-two'));\n\nconst Segments = {\n  HOME: 'HOME',\n  APP_ONE: 'APP_0',\n  APP_TWO: 'APP_1',\n};\n\nexport const SideNavbar = () => {\n  const [visibleSegment, setVisibleSegment] = useState(Segments.HOME);\n  const { dashBoardsList } = useGetDashboards()\n\n  const navEntries = dashBoardsList.reduce((acc, Comp, idx) => ({\n    ...acc,\n    [`APP_${idx + 1}`]: acc.component\n  }))\n\n  const renderSegments = (name) => ({\n    [Segments.HOME]: <Dashboard/>,\n    ...navEntries\n  })[name];\n\n  return (\n    <Grid columns={1}>\n      <Grid.Column>\n        <Sidebar.Pushable as={Segment} style={{minHeight: '100vh'}}>\n          <Sidebar\n            as={Menu}\n            animation='overlay'\n            direction='left'\n            icon='labeled'\n            inverted\n            vertical\n            visible={true}\n            width='thin'\n          >\n            <Menu.Item className=\"side-navbar-item\" style={{display: 'flex !important'}} as='a'\n                       onClick={() => setVisibleSegment(Segments.HOME)}\n                       active={visibleSegment === Segments.HOME}>\n              <img className=\"side-navbar-item-logo\" src={BLUE_LOGO} alt=\"volvo\"/>\n              <span className=\"side-navbar-item-title\">Volvo</span>\n            </Menu.Item>\n            <Menu.Item as='a' onClick={() => setVisibleSegment(Segments.APP_ONE)}\n                       active={visibleSegment === Segments.APP_ONE}>\n              <Icon name='font'/>\n              Npm package\n            </Menu.Item>\n            <Menu.Item as='a' onClick={() => setVisibleSegment(Segments.APP_TWO)}\n                       active={visibleSegment === Segments.APP_TWO}>\n              <Icon name='bold'/>\n              Npm package\n            </Menu.Item>\n          </Sidebar>\n          <Sidebar.Pusher>\n            <Suspense fallback={<div>Loading...</div>}>\n              <div className=\"h-main-segment\">\n                {renderSegments(visibleSegment)}\n              </div>\n            </Suspense>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\n// <div className=\"side-navbar\">\n//   { dashBoardsList.map(dashboard => (\n//     <div key={dashboard.slug}>\n//       <img src={dashboard.icon()} alt={dashboard.title}/>\n//       <span>{dashboard.title}</span>\n//     </div>\n//   ))}\n// </div>"]},"metadata":{},"sourceType":"module"}