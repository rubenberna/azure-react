{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/components/dashboard/DashboardCard.js\";\nimport React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { isBase64encoded } from '../../utils/_general.util';\nexport const DashboardCard = ({\n  dasboard\n}) => {\n  const cardHeader = dasboardContent => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: dasboardContent.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: dasboardContent.title,\n      src: isBase64encoded(dasboardContent.icon) ? `data:image/jpeg;base64,${dasboardContent.icon}` : dasboardContent.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    link: true,\n    header: cardHeader(dasboard),\n    meta: dasboard.requiredPermissions.join(', '),\n    description: dasboard.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = DashboardCard;\nDashboardCard.propTypes = {\n  dasboard: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    requiredPermissions: PropTypes.array,\n    icon: PropTypes.string\n  })\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardCard\");","map":{"version":3,"sources":["/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/components/dashboard/DashboardCard.js"],"names":["React","Card","PropTypes","isBase64encoded","DashboardCard","dasboard","cardHeader","dasboardContent","title","icon","requiredPermissions","join","description","propTypes","shape","string","array"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAA+B,2BAA/B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAE3C,QAAMC,UAAU,GAAIC,eAAD,iBACjB;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA,gBAAOA,eAAe,CAACC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,GAAG,EAAED,eAAe,CAACC,KADvB;AAEE,MAAA,GAAG,EAAEL,eAAe,CAACI,eAAe,CAACE,IAAjB,CAAf,GAAyC,0BAAyBF,eAAe,CAACE,IAAK,EAAvF,GAA2FF,eAAe,CAACE;AAFlH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AASA,sBACE,QAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,MAAM,EAAEH,UAAU,CAACD,QAAD,CAFpB;AAGE,IAAA,IAAI,EAAEA,QAAQ,CAACK,mBAAT,CAA6BC,IAA7B,CAAkC,IAAlC,CAHR;AAIE,IAAA,WAAW,EAAEN,QAAQ,CAACO;AAJxB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnBM;KAAMR,a;AAqBbA,aAAa,CAACS,SAAd,GAA0B;AACxBR,EAAAA,QAAQ,EAAEH,SAAS,CAACY,KAAV,CAAgB;AACxBN,IAAAA,KAAK,EAAEN,SAAS,CAACa,MADO;AAExBH,IAAAA,WAAW,EAAEV,SAAS,CAACa,MAFC;AAGxBL,IAAAA,mBAAmB,EAAER,SAAS,CAACc,KAHP;AAIxBP,IAAAA,IAAI,EAAEP,SAAS,CAACa;AAJQ,GAAhB;AADc,CAA1B","sourcesContent":["import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { isBase64encoded} from '../../utils/_general.util';\n\nexport const DashboardCard = ({dasboard}) => {\n\n  const cardHeader = (dasboardContent) => (\n    <div className=\"dashboard-card\">\n      <span>{dasboardContent.title}</span>\n      <img\n        alt={dasboardContent.title}\n        src={isBase64encoded(dasboardContent.icon) ? `data:image/jpeg;base64,${dasboardContent.icon}` : dasboardContent.icon }/>\n    </div>\n  )\n\n  return (\n    <Card\n      link\n      header={cardHeader(dasboard)}\n      meta={dasboard.requiredPermissions.join(', ')}\n      description={dasboard.description}\n    />\n  );\n};\n\nDashboardCard.propTypes = {\n  dasboard: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    requiredPermissions: PropTypes.array,\n    icon: PropTypes.string,\n  })\n};\n\n"]},"metadata":{},"sourceType":"module"}