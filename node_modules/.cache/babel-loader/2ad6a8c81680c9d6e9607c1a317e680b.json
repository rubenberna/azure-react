{"ast":null,"code":"import createDataContext from './createDataContext';\nconst TYPES = {\n  ADD_NOTIFICATION: 'notifications/addNotification',\n  CLEAR_NOTIFICATION: 'notifications/clearNotification'\n};\nconst initialState = {\n  message: undefined,\n  visible: false\n};\n\nconst notificationsReducer = (state, action) => {\n  switch (action.type) {\n    case TYPES.ADD_NOTIFICATION:\n      return {\n        visible: true,\n        message: action.payload\n      };\n\n    case TYPES.CLEAR_NOTIFICATION:\n      return {\n        visible: false,\n        message: ''\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setNotification = dispatch => message => {\n  dispatch({\n    type: TYPES.ADD_NOTIFICATION,\n    payload: message\n  });\n};\n\nconst clearNotifications = dispatch => () => {\n  dispatch({\n    type: TYPES.CLEAR_NOTIFICATION\n  });\n};\n\nexport const {\n  Provider,\n  Context\n} = createDataContext(notificationsReducer, {\n  setNotification,\n  clearNotifications\n}, initialState);","map":{"version":3,"sources":["/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/context/NotificationsContext.js"],"names":["createDataContext","TYPES","ADD_NOTIFICATION","CLEAR_NOTIFICATION","initialState","message","undefined","visible","notificationsReducer","state","action","type","payload","setNotification","dispatch","clearNotifications","Provider","Context"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,gBAAgB,EAAE,+BADN;AAEZC,EAAAA,kBAAkB,EAAE;AAFR,CAAd;AAKA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAEC,SADU;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMC,oBAAoB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,KAAK,CAACC,gBAAX;AACE,aAAO;AAAEK,QAAAA,OAAO,EAAE,IAAX;AAAiBF,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAAjC,OAAP;;AACF,SAAKX,KAAK,CAACE,kBAAX;AACE,aAAO;AAAEI,QAAAA,OAAO,EAAE,KAAX;AAAkBF,QAAAA,OAAO,EAAE;AAA3B,OAAP;;AACF;AACE,aAAOI,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMI,eAAe,GAAIC,QAAD,IAAeT,OAAD,IAAa;AACjDS,EAAAA,QAAQ,CAAC;AACPH,IAAAA,IAAI,EAAEV,KAAK,CAACC,gBADL;AAEPU,IAAAA,OAAO,EAAEP;AAFF,GAAD,CAAR;AAID,CALD;;AAQA,MAAMU,kBAAkB,GAAID,QAAD,IAAc,MAAM;AAC7CA,EAAAA,QAAQ,CAAC;AACPH,IAAAA,IAAI,EAAEV,KAAK,CAACE;AADL,GAAD,CAAR;AAGD,CAJD;;AAMA,OAAO,MAAM;AAAEa,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAwBjB,iBAAiB,CACpDQ,oBADoD,EAEpD;AAACK,EAAAA,eAAD;AAAkBE,EAAAA;AAAlB,CAFoD,EAGpDX,YAHoD,CAA/C","sourcesContent":["import createDataContext from './createDataContext';\n\nconst TYPES = {\n  ADD_NOTIFICATION: 'notifications/addNotification',\n  CLEAR_NOTIFICATION: 'notifications/clearNotification'\n}\n\nconst initialState = {\n  message: undefined,\n  visible: false\n}\n\nconst notificationsReducer = (state, action) => {\n  switch (action.type) {\n    case TYPES.ADD_NOTIFICATION:\n      return { visible: true, message: action.payload }\n    case TYPES.CLEAR_NOTIFICATION:\n      return { visible: false, message: '' }\n    default:\n      return state\n  }\n}\n\nconst setNotification = (dispatch) => (message) => {\n  dispatch({\n    type: TYPES.ADD_NOTIFICATION,\n    payload: message\n  })\n}\n\n\nconst clearNotifications = (dispatch) => () => {\n  dispatch({\n    type: TYPES.CLEAR_NOTIFICATION,\n  })\n}\n\nexport const { Provider, Context } = createDataContext(\n  notificationsReducer,\n  {setNotification, clearNotifications},\n  initialState\n)"]},"metadata":{},"sourceType":"module"}