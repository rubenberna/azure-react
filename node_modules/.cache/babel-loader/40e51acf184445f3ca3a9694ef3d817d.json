{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/utils/useGetDashboards.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, useContext } from 'react';\nimport { metadata as appOneMetadata } from '@data-portal/app-one';\nimport { metadata as appTwoMetadata } from '@data-portal/app-two';\nimport { convertToKebabCase } from './_general.util';\nimport { Context as AuthContext } from '../context/AuthContext';\nconst GHubProfile = /*#__PURE__*/lazy(_c = () => import('@data-portal/app-one'));\n_c2 = GHubProfile;\nconst Counter = /*#__PURE__*/lazy(_c3 = () => import('@data-portal/app-two'));\n_c4 = Counter;\nexport const useGetDashboards = () => {\n  _s();\n\n  const {\n    state\n  } = useContext(AuthContext);\n  const listOfLibraries = [appOneMetadata, appTwoMetadata];\n  const otherDashboardList = listOfLibraries.map(dashboard => ({\n    title: dashboard.title,\n    description: dashboard.description,\n    icon: dashboard.icon,\n    slug: `/${convertToKebabCase(dashboard.title)}`,\n    requiredPermissions: dashboard.requiredPermissions,\n    component: /*#__PURE__*/lazy(() => import(dashboard.libraryPath))\n  }));\n  console.log(otherDashboardList);\n  const dashBoardsList = [{\n    title: appOneMetadata.title,\n    description: appOneMetadata.description,\n    slug: `/${convertToKebabCase(appOneMetadata.title)}`,\n    requiredPermissions: appOneMetadata.requiredPermissions,\n    icon: appOneMetadata.icon,\n    component: /*#__PURE__*/_jsxDEV(GHubProfile, {\n      title: \"GitHub finder\",\n      state: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 18\n    }, this)\n  }, {\n    title: appTwoMetadata.title,\n    description: appTwoMetadata.description,\n    slug: `/${convertToKebabCase(appTwoMetadata.title)}`,\n    requiredPermissions: appTwoMetadata.requiredPermissions,\n    icon: appTwoMetadata.icon,\n    component: /*#__PURE__*/_jsxDEV(Counter, {\n      state: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this)\n  }];\n  return {\n    dashBoardsList\n  };\n};\n\n_s(useGetDashboards, \"InUhF7dRXCUahyxBMI4beA9RUck=\");\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GHubProfile$lazy\");\n$RefreshReg$(_c2, \"GHubProfile\");\n$RefreshReg$(_c3, \"Counter$lazy\");\n$RefreshReg$(_c4, \"Counter\");","map":{"version":3,"sources":["/Users/rubenbernardes/Code/freelance/volvo/azure-context/src/utils/useGetDashboards.js"],"names":["React","lazy","useContext","metadata","appOneMetadata","appTwoMetadata","convertToKebabCase","Context","AuthContext","GHubProfile","Counter","useGetDashboards","state","listOfLibraries","otherDashboardList","map","dashboard","title","description","icon","slug","requiredPermissions","component","libraryPath","console","log","dashBoardsList"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,QAAQ,IAAIC,cAArB,QAA2C,sBAA3C;AACA,SAASD,QAAQ,IAAIE,cAArB,QAA2C,sBAA3C;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,wBAAvC;AAEA,MAAMC,WAAW,gBAAGR,IAAI,MAAC,MAAM,OAAO,sBAAP,CAAP,CAAxB;MAAMQ,W;AACN,MAAMC,OAAO,gBAAGT,IAAI,OAAC,MAAM,OAAO,sBAAP,CAAP,CAApB;MAAMS,O;AAEN,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AACpC,QAAM;AAACC,IAAAA;AAAD,MAAUV,UAAU,CAACM,WAAD,CAA1B;AACA,QAAMK,eAAe,GAAG,CAACT,cAAD,EAAiBC,cAAjB,CAAxB;AAEA,QAAMS,kBAAkB,GAAGD,eAAe,CAACE,GAAhB,CAAoBC,SAAS,KAAK;AAC3DC,IAAAA,KAAK,EAAED,SAAS,CAACC,KAD0C;AAE3DC,IAAAA,WAAW,EAAEF,SAAS,CAACE,WAFoC;AAG3DC,IAAAA,IAAI,EAAEH,SAAS,CAACG,IAH2C;AAI3DC,IAAAA,IAAI,EAAG,IAAGd,kBAAkB,CAACU,SAAS,CAACC,KAAX,CAAkB,EAJa;AAK3DI,IAAAA,mBAAmB,EAAEL,SAAS,CAACK,mBAL4B;AAM3DC,IAAAA,SAAS,eAAErB,IAAI,CAAE,MAAM,OAAOe,SAAS,CAACO,WAAjB,CAAR;AAN4C,GAAL,CAA7B,CAA3B;AASAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,kBAAZ;AAEA,QAAMY,cAAc,GAAG,CACrB;AACET,IAAAA,KAAK,EAAEb,cAAc,CAACa,KADxB;AAEEC,IAAAA,WAAW,EAAEd,cAAc,CAACc,WAF9B;AAGEE,IAAAA,IAAI,EAAG,IAAGd,kBAAkB,CAACF,cAAc,CAACa,KAAhB,CAAuB,EAHrD;AAIEI,IAAAA,mBAAmB,EAAEjB,cAAc,CAACiB,mBAJtC;AAKEF,IAAAA,IAAI,EAAEf,cAAc,CAACe,IALvB;AAMEG,IAAAA,SAAS,eAAE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAC,eAAnB;AAAmC,MAAA,KAAK,EAAEV;AAA1C;AAAA;AAAA;AAAA;AAAA;AANb,GADqB,EAQlB;AACDK,IAAAA,KAAK,EAAEZ,cAAc,CAACY,KADrB;AAEDC,IAAAA,WAAW,EAAEb,cAAc,CAACa,WAF3B;AAGDE,IAAAA,IAAI,EAAG,IAAGd,kBAAkB,CAACD,cAAc,CAACY,KAAhB,CAAuB,EAHlD;AAIDI,IAAAA,mBAAmB,EAAEhB,cAAc,CAACgB,mBAJnC;AAKDF,IAAAA,IAAI,EAAEd,cAAc,CAACc,IALpB;AAMDG,IAAAA,SAAS,eAAE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEV;AAAhB;AAAA;AAAA;AAAA;AAAA;AANV,GARkB,CAAvB;AAkBA,SAAO;AAACc,IAAAA;AAAD,GAAP;AACD,CAlCM;;GAAMf,gB","sourcesContent":["import React, { lazy, useContext } from 'react';\nimport { metadata as appOneMetadata } from '@data-portal/app-one';\nimport { metadata as appTwoMetadata } from '@data-portal/app-two';\nimport { convertToKebabCase } from './_general.util';\nimport { Context as AuthContext } from '../context/AuthContext';\n\nconst GHubProfile = lazy(() => import('@data-portal/app-one'));\nconst Counter = lazy(() => import('@data-portal/app-two'));\n\nexport const useGetDashboards = () => {\n  const {state} = useContext(AuthContext);\n  const listOfLibraries = [appOneMetadata, appTwoMetadata]\n\n  const otherDashboardList = listOfLibraries.map(dashboard => ({\n    title: dashboard.title,\n    description: dashboard.description,\n    icon: dashboard.icon,\n    slug: `/${convertToKebabCase(dashboard.title)}`,\n    requiredPermissions: dashboard.requiredPermissions,\n    component: lazy( () => import(dashboard.libraryPath))\n  }))\n\n  console.log(otherDashboardList);\n\n  const dashBoardsList = [\n    {\n      title: appOneMetadata.title,\n      description: appOneMetadata.description,\n      slug: `/${convertToKebabCase(appOneMetadata.title)}`,\n      requiredPermissions: appOneMetadata.requiredPermissions,\n      icon: appOneMetadata.icon,\n      component: <GHubProfile title=\"GitHub finder\" state={state}/>\n    }, {\n      title: appTwoMetadata.title,\n      description: appTwoMetadata.description,\n      slug: `/${convertToKebabCase(appTwoMetadata.title)}`,\n      requiredPermissions: appTwoMetadata.requiredPermissions,\n      icon: appTwoMetadata.icon,\n      component: <Counter state={state}/>\n    },\n  ];\n\n  return {dashBoardsList};\n};"]},"metadata":{},"sourceType":"module"}