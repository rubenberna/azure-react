{"version":3,"sources":["context/createDataContext.js","config/environment.js","utils/security/security.util.js","context/auth/AuthContext.js","context/notifications/NotificationsContext.js","components/appContainer/AppContainer.jsx","config/history.js","utils/general/_general.util.js","utils/dashboard/useGetDashboards.js","consts/permissions/permissions.consts.js","consts/notifications/notifications.consts.js","utils/permissions/useUserHasPermission.util.js","components/dashboard/DashboardCard.js","components/dashboard/Dashboard.js","components/genericTemplate/index.js","components/topNavbar/TopNavbar.js","components/sideNavbar/SideNavbar.js","assets/icons/assets-logo-icon.png","components/notifications/Notifications.js","components/App.jsx","reportWebVitals.js","index.js"],"names":["reducer","actions","initialState","Context","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","ENV","process","APP_ID","REACT_APP_APP_ID","AZURE_AUTHORITY","REACT_APP_REDIRECT_URI","REACT_APP_MSAL_SCOPES","REACT_APP_AZURE_AUTHORITY","MSAL_CONFIG","auth","clientId","redirectUri","window","location","origin","authority","postLogoutRedirectUri","azureProvider","PublicClientApplication","scopeRequestConfig","scopes","getAccessToken","a","allAccounts","getAllAccounts","length","Error","acquireTokenSilent","account","silentResult","token","accessToken","idToken","isInteractionNeeded","loginPopup","interactiveResult","error","message","indexOf","parseJwt","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","getRolesFromParsedJwt","parsedJWT","roles","Array","toUpperCase","TYPES","isAuthenticated","username","role","errorMessage","createDataContext","action","type","payload","name","signIn","userRole","signOut","logout","changeName","visible","setNotification","setTimeout","clearNotifications","undefined","AppContainer","createBrowserHistory","isBase64encoded","string","RegExp","test","GitHubFinder","lazy","Counter","useGetDashboards","useContext","AuthContext","listOfLibraries","appOneMetadata","appTwoMetadata","dashBoardsList","dashboard","index","title","description","icon","slug","toLowerCase","requiredPermissions","component","APP_1","APP_2","PERMISSIONS","SUPER_ADMIN","ADMIN","GUEST","DEFAULT_NOTIFICATIONS","userHasPermission","permissionToCheck","permissionsArray","Object","values","sortedPermissionsToCheck","sort","b","bottomPermission","userRoleIndex","permissionToCheckIndex","includes","useProtectedNavigation","history","useHistory","NotificationsContext","navigateSafely","requiredPermission","link","push","DashboardCard","dasboardContent","dasboard","Card","header","className","alt","src","meta","onClick","Dashboard","Button","content","primary","GenericTemplate","useEffect","usePrivateRoute","TopNavbar","Dropdown","text","Menu","Item","defaultHome","SideNavbar","useState","visibleSegment","setVisibleSegment","Sidebar","as","animation","direction","inverted","vertical","width","active","Notifications","autoClose","hideProgressBar","closeOnClick","activateToast","toast","App","fallback","exact","path","render","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cebf7a8.chunk.js","sourcesContent":["import React, { useReducer, createContext } from \"react\";\n\nexport default (reducer, actions, initialState) => {\n  const Context = createContext(initialState);\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const boundActions = {};\n    for (let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider\n        value={{\n          state,\n          ...boundActions,\n        }}\n      >\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  return { Context, Provider };\n};","const ENV = process.env\n\nexport const {\n  REACT_APP_APP_ID: APP_ID,\n  REACT_APP_REDIRECT_URI: REDIRECT_URI,\n  REACT_APP_MSAL_SCOPES: SCOPES,\n  REACT_APP_AZURE_AUTHORITY: AZURE_AUTHORITY\n} = ENV","import { PublicClientApplication } from '@azure/msal-browser';\nimport { APP_ID, AZURE_AUTHORITY, SCOPES } from '../../config/environment';\n\nconst MSAL_CONFIG = {\n  auth: {\n    clientId: APP_ID,\n    redirectUri: window.location.origin,\n    authority: AZURE_AUTHORITY,\n    postLogoutRedirectUri: window.location.origin,\n  },\n};\n\nexport const azureProvider = new PublicClientApplication(MSAL_CONFIG);\nexport const scopeRequestConfig = {\n  scopes: ['user.read','mailboxsettings.read','calendars.readwrite']\n};\n\nexport const getAccessToken = async () => {\n  const allAccounts = azureProvider.getAllAccounts();\n  try {\n    if (allAccounts?.length <= 0) throw new Error('login_required');\n    const silentResult = await azureProvider.acquireTokenSilent({\n      scopeRequestConfig,\n      account: allAccounts[0]\n    });\n\n    return {\n      token: silentResult.accessToken,\n      idToken: silentResult.idToken,\n      account: allAccounts[0]\n    }\n  } catch (err) {\n    if (isInteractionNeeded(err)) {\n      const interactiveResult = await azureProvider.loginPopup(scopeRequestConfig);\n      const allAccounts = azureProvider.getAllAccounts();\n\n      return {\n        token: interactiveResult.accessToken,\n        idToken: interactiveResult.idToken,\n        account: allAccounts[0]\n      }\n    } else {\n      throw err;\n    }\n  }\n}\n\nexport const isInteractionNeeded = (error) => {\n  if (!error.message || error.message.length <= 0) {\n    return false;\n  }\n\n  return (\n    error.message.indexOf('consent_required') > -1 ||\n    error.message.indexOf('interaction_required') > -1 ||\n    error.message.indexOf('login_required') > -1 ||\n    error.message.indexOf('no_account_in_silent_request') > -1\n  );\n};\n\nexport const parseJwt = (token) => {\n  const base64Url = token.split('.')[1];\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n};\n\nexport const getRolesFromParsedJwt = (parsedJWT) => {\n  if (parsedJWT?.roles instanceof Array) {\n    return parsedJWT?.roles[0]?.toUpperCase();\n  } else{\n    return parsedJWT?.roles?.toUpperCase();\n  }\n}","import createDataContext from '../createDataContext';\nimport { azureProvider, getAccessToken, getRolesFromParsedJwt, parseJwt } from '../../utils/security/security.util';\n\nconst TYPES = {\n  ADD_ERROR: 'auth/add_error',\n  LOGIN: 'auth/login',\n  SIGN_OUT: 'auth/signOut',\n  CLEAR_ERROR: 'auth/clearError',\n  SET_USER: 'auth/setUser',\n};\n\nconst initialState = {\n  isAuthenticated: false,\n  token: null,\n  username: null,\n  role: null,\n  errorMessage: ''\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case TYPES.ADD_ERROR:\n      return {...state, errorMessage: action.payload};\n    case TYPES.LOGIN:\n      return {username: action.payload.name, isAuthenticated: true, errorMessage: '', token: action.payload.token, role: action.payload.role};\n    case TYPES.CLEAR_ERROR:\n      return {...state, errorMessage: ''};\n    case TYPES.SIGN_OUT:\n      return initialState;\n    case TYPES.SET_USER:\n      return {...state, username: action.payload}\n    default:\n      return state;\n  }\n};\n\nconst signIn = (dispatch) => async () => {\n  const {token, account, idToken} = await getAccessToken();\n  const parsedJWT = parseJwt(idToken);\n  const userRole = getRolesFromParsedJwt(parsedJWT);\n\n  dispatch({\n    type: TYPES.LOGIN,\n    payload: {\n      token,\n      name: account.name,\n      role: userRole\n    }\n  });\n};\n\nconst signOut = (dispatch) => async () => {\n  await azureProvider.logout();\n\n  dispatch({\n    type: TYPES.SIGN_OUT\n  });\n};\n\nconst changeName = (dispatch) => () => {\n  dispatch({\n    type: TYPES.SET_USER,\n    payload: 'Ambrosio'\n  })\n}\n\nexport const {Provider, Context} = createDataContext(\n  authReducer,\n  {signIn, signOut, changeName},\n  initialState\n);\n","import createDataContext from '../createDataContext';\n\nconst TYPES = {\n  ADD_NOTIFICATION: 'notifications/addNotification',\n  CLEAR_NOTIFICATION: 'notifications/clearNotification'\n}\n\nconst initialState = {\n  message: undefined,\n  visible: false\n}\n\nconst notificationsReducer = (state, action) => {\n  switch (action.type) {\n    case TYPES.ADD_NOTIFICATION:\n      return { visible: true, message: action.payload }\n    case TYPES.CLEAR_NOTIFICATION:\n      return { visible: false, message: '' }\n    default:\n      return state\n  }\n}\n\nconst setNotification = (dispatch) => (message) => {\n  dispatch({\n    type: TYPES.ADD_NOTIFICATION,\n    payload: message\n  })\n\n  setTimeout(() =>\n    dispatch({\n      type: TYPES.CLEAR_NOTIFICATION,\n    }), 1000)\n}\n\n\nconst clearNotifications = (dispatch) => () => {\n  dispatch({\n    type: TYPES.CLEAR_NOTIFICATION,\n  })\n}\n\nexport const { Provider, Context } = createDataContext(\n  notificationsReducer,\n  {setNotification, clearNotifications},\n  initialState\n)","import React from 'react';\nimport { Provider as AuthProvider } from '../../context/auth/AuthContext';\nimport { Provider as NotificationsProvider } from '../../context/notifications/NotificationsContext';\n\nexport const AppContainer = ({children}) => {\n  return (\n    <NotificationsProvider>\n      <AuthProvider>\n        {children}\n      </AuthProvider>\n    </NotificationsProvider>\n  );\n};\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory()","export const convertToKebabCase = (string) => {\n  return string.replace(/\\s+/g, '-').toLowerCase();\n}\n\nexport const isBase64encoded = (string) => {\n  const regex = RegExp('^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$')\n\n  return regex.test(string)\n}","import { lazy, useContext } from 'react';\nimport { metadata as appOneMetadata } from '@data-portal/app-one';\nimport { metadata as appTwoMetadata } from '@data-portal/app-two';\nimport { convertToKebabCase } from '../general/_general.util';\nimport { Context as AuthContext } from '../../context/auth/AuthContext';\n\nconst GitHubFinder = lazy(() => import('@data-portal/app-one'));\nconst Counter = lazy(() => import('@data-portal/app-two'));\n\n\nexport const useGetDashboards = () => {\n  const {state} = useContext(AuthContext);\n  const listOfLibraries = [appOneMetadata, appTwoMetadata];\n\n  const DASHBOARDS = (name) => ({\n    APP_1: <GitHubFinder state={state}/>,\n    APP_2: <Counter state={state}/>\n  })[name]\n\n\n  const dashBoardsList = listOfLibraries.map((dashboard, index) => ({\n    title: dashboard.title,\n    description: dashboard.description,\n    icon: dashboard.icon,\n    slug: `/${convertToKebabCase(dashboard.title)}`,\n    requiredPermissions: dashboard.requiredPermissions,\n    component: DASHBOARDS([`APP_${index + 1 }`])\n  }));\n\n  return {dashBoardsList};\n};\n","export const PERMISSIONS = {\n  SUPER_ADMIN: 'SUPER.ADMIN',\n  ADMIN: 'ADMIN',\n  GUEST: 'GUEST'\n}","export const DEFAULT_NOTIFICATIONS = {\n  notAllowed: 'Not so fast!'\n}","import { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PERMISSIONS } from '../../consts/permissions/permissions.consts';\nimport { Context as NotificationsContext } from '../../context/notifications/NotificationsContext';\nimport { DEFAULT_NOTIFICATIONS } from '../../consts/notifications/notifications.consts';\n\nexport const userHasPermission = (permissionToCheck, role) => {\n  const permissionsArray = Object.values(PERMISSIONS);\n  const sortedPermissionsToCheck = permissionToCheck?.sort((a, b) => permissionsArray.indexOf(a) - permissionsArray.indexOf(b));\n  const bottomPermission = sortedPermissionsToCheck[sortedPermissionsToCheck.length - 1];\n  const userRoleIndex = permissionsArray.indexOf(role);\n  const permissionToCheckIndex = permissionsArray.indexOf(bottomPermission.toUpperCase());\n\n  if (userRoleIndex < 0) return false\n  if (permissionToCheck.includes(role)) return true\n  return userRoleIndex <= permissionToCheckIndex;\n};\n\nexport const useProtectedNavigation = () => {\n  const history = useHistory();\n  const {setNotification} = useContext(NotificationsContext);\n\n  const navigateSafely = (requiredPermission, role, link) => {\n    if (requiredPermission && role) {\n      if (userHasPermission(requiredPermission, role)) {\n        history.push(link)\n      } else {\n        setNotification(DEFAULT_NOTIFICATIONS.notAllowed)\n      }\n    }\n  }\n\n  return { navigateSafely }\n}\n\nexport const usePrivateRoute = (permissionToCheck, role) => {\n  const {setNotification} = useContext(NotificationsContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!role) {\n      setNotification(DEFAULT_NOTIFICATIONS.notAllowed)\n      history.push('/');\n    }\n    if (role && permissionToCheck) {\n      if (!userHasPermission(permissionToCheck, role)) {\n        history.push('/');\n        setNotification(DEFAULT_NOTIFICATIONS.notAllowed)\n      }\n    }\n  }, [permissionToCheck, role]);\n};\n","import React, { useContext } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { isBase64encoded} from '../../utils/general/_general.util';\nimport { useProtectedNavigation } from '../../utils/permissions/useUserHasPermission.util';\nimport { Context as AuthContext } from '../../context/auth/AuthContext';\n\nexport const DashboardCard = ({dasboard}) => {\n  const {state: {role}} = useContext(AuthContext);\n  const {navigateSafely} = useProtectedNavigation();\n\n  const cardHeader = (dasboardContent) => (\n    <div className=\"dashboard-card\">\n      <span>{dasboardContent.title}</span>\n      <img\n        alt={dasboardContent.title}\n        src={isBase64encoded(dasboardContent.icon) ? `data:image/jpeg;base64,${dasboardContent.icon}` : dasboardContent.icon }/>\n    </div>\n  )\n\n  return (\n    <Card\n      link\n      header={cardHeader(dasboard)}\n      meta={dasboard.requiredPermissions.join(', ')}\n      description={dasboard.description}\n      onClick={() => navigateSafely(dasboard.requiredPermissions, role, dasboard.slug)}\n    />\n  );\n};\n\nDashboardCard.propTypes = {\n  dasboard: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    requiredPermissions: PropTypes.array,\n    icon: PropTypes.string,\n    slug: PropTypes.string\n  })\n};\n\n","import React, { useContext } from 'react';\nimport { Button } from 'semantic-ui-react'\nimport { Context as AuthContext } from '../../context/auth/AuthContext';\nimport { useGetDashboards } from '../../utils/dashboard/useGetDashboards';\nimport { DashboardCard } from './DashboardCard';\n\nexport const Dashboard = () => {\n  const {changeName} = useContext(AuthContext);\n  const {dashBoardsList} = useGetDashboards();\n\n  return (\n    <div className=\"h-main-segment\">\n      <div className=\"h-flex-column\">\n        <div>\n          <h3>Main dashboard</h3>\n          <Button content='Change name' primary onClick={changeName}/>\n        </div>\n        <div className=\"dashboard\">\n          {dashBoardsList.map(dashboard => <DashboardCard key={dashboard.slug} dasboard={dashboard}/>)}\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Context as AuthContext } from '../../context/auth/AuthContext';\nimport { usePrivateRoute } from '../../utils/permissions/useUserHasPermission.util';\n\nexport const GenericTemplate = ({children, dashboard}) => {\n  const {state: {role}} = useContext(AuthContext);\n  usePrivateRoute(dashboard.requiredPermissions, role);\n\n  return (\n    <div className=\"h-main-segment\">\n      {children}\n    </div>\n  );\n};\n\nGenericTemplate.propTypes = {\n  dasboard: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    requiredPermissions: PropTypes.array,\n    icon: PropTypes.string,\n  })\n};","import React, { useContext } from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { Context as AuthContext } from '../../context/auth/AuthContext';\n\nexport const TopNavbar = () => {\n  const {state: {username, isAuthenticated}, signOut, signIn} = useContext(AuthContext);\n\n  return (\n    <div className=\"top-navbar\">\n      {\n        isAuthenticated ?\n          <Dropdown className=\"h-font-weight-bold\" text={username}>\n            <Dropdown.Menu>\n              <Dropdown.Item icon='sign-out' text='Sign out' onClick={signOut}/>\n            </Dropdown.Menu>\n          </Dropdown>\n          :\n          <span className=\"h-font-weight-bold\" onClick={signIn}>Sign in</span>\n      }\n    </div>\n  );\n};","import React, { useContext, useState } from 'react';\nimport { Menu, Sidebar } from 'semantic-ui-react';\nimport { useGetDashboards } from '../../utils/dashboard/useGetDashboards';\nimport { useProtectedNavigation } from '../../utils/permissions/useUserHasPermission.util';\nimport VolvoIcon from '../../assets/icons/assets-logo-icon.png';\nimport { Context as AuthContext } from '../../context/auth/AuthContext';\nimport { PERMISSIONS } from '../../consts/permissions/permissions.consts';\nimport { isBase64encoded } from '../../utils/general/_general.util';\n\n\nconst defaultHome = {\n  title: 'Volvo',\n  slug: '/',\n  icon: VolvoIcon,\n  requiredPermissions: [PERMISSIONS.GUEST]\n};\n\nexport const SideNavbar = () => {\n  const {state: {role}} = useContext(AuthContext);\n  const {dashBoardsList} = useGetDashboards();\n  const [visibleSegment, setVisibleSegment] = useState(defaultHome.slug);\n  const {navigateSafely} = useProtectedNavigation();\n\n  const navigate = (requiredPermission, link) => {\n    setVisibleSegment(link);\n    navigateSafely(requiredPermission, role, link);\n  };\n\n  return (\n    <Sidebar\n      as={Menu}\n      animation='overlay'\n      direction='left'\n      icon='labeled'\n      inverted\n      vertical\n      visible={true}\n      width='thin'>\n      {[defaultHome, ...dashBoardsList].map((dashboard) => (\n        <Menu.Item\n          key={dashboard.slug}\n          className=\"side-navbar-item\"\n          as='a'\n          active={visibleSegment === dashboard.slug}\n          onClick={() => navigate(dashboard.requiredPermissions, dashboard.slug)}>\n          <img className=\"side-navbar-item-logo\"\n               src={isBase64encoded(dashboard.icon) ? `data:image/jpeg;base64,${dashboard.icon}` : dashboard.icon}\n               alt={dashboard.title}/>\n          <span>{dashboard.title}</span>\n        </Menu.Item>\n      ))}\n    </Sidebar>\n  );\n};\n\n","export default __webpack_public_path__ + \"static/media/assets-logo-icon.7bb66355.png\";","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const Notifications = () => (\n  <ToastContainer\n    autoClose={3000}\n    hideProgressBar={true}\n    closeOnClick\n  />\n);\n\nexport const activateToast = toast\n\n\n","import React, { Suspense, useContext, useEffect } from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport history from '../config/history';\nimport { Context as AuthContext } from '../context/auth/AuthContext';\nimport { Context as NotificationsContext } from '../context/notifications/NotificationsContext';\nimport { Dashboard } from './dashboard/Dashboard';\nimport { GenericTemplate } from './genericTemplate';\nimport { useGetDashboards } from '../utils/dashboard/useGetDashboards';\nimport { TopNavbar } from './topNavbar/TopNavbar';\nimport { SideNavbar } from './sideNavbar/SideNavbar';\nimport { activateToast, Notifications } from './notifications/Notifications';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nexport const App = () => {\n  const {signIn} = useContext(AuthContext);\n  const {state: {message, visible}} = useContext(NotificationsContext);\n  const {dashBoardsList} = useGetDashboards();\n\n  useEffect(() => {\n    signIn();\n  }, []);\n\n  useEffect(() => {\n    if (message && visible) {\n      activateToast(message);\n    }\n  }, [message, visible]);\n\n  return (\n    <BrowserRouter history={history}>\n      <Notifications/>\n      <TopNavbar/>\n      <SideNavbar/>\n      <Switch>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Route exact path=\"/\" component={Dashboard}/>\n          {dashBoardsList?.map(dashboard => (\n            <Route\n              path={dashboard.slug}\n              exact\n              key={dashboard.slug}\n              render={() => <GenericTemplate dashboard={dashboard}>{dashboard.component}</GenericTemplate>}\n            />\n          ))}\n        </Suspense>\n        <Route path=\"*\">\n          <Redirect to=\"/\"/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppContainer } from './components/appContainer/AppContainer';\nimport { App } from './components/App'\nimport reportWebVitals from './reportWebVitals';\nimport './theme/index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer>\n      <App/>\n    </AppContainer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}